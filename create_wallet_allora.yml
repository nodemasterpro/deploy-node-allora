---
- name: Create Wallet for 0G Validator Node
  hosts: localhost
  become: true

  vars:
    GO_VERSION: "1.23.0"
    ALLOCHAIN_REPO: "https://github.com/allora-network/allora-chain.git"
    ALLORAD_VERSION: "HEAD-be9dd1ee2e6d91ce2105f6ce4470d774a8a1433e"

  vars_prompt:
    - name: wallet_name
      prompt: "Enter your wallet name"
      private: false

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: 'yes'

    - name: Install required packages
      apt:
        name:
          - curl
          - git
          - wget
          - build-essential
          - jq
          - pkg-config
          - lsb-release
          - libssl-dev
          - libreadline-dev
          - libffi-dev
          - gcc
          - unzip
          - lz4
          - python3
          - python3-pip
        state: present

    - name: Check Go version
      shell: go version
      register: go_version_check
      ignore_errors: yes

    - name: Install Go if not present or version mismatch
      block:
        - name: Install Go
          shell: |
            cd $HOME && \
            ver="{{ GO_VERSION }}" && \
            wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz" && \
            rm -rf /usr/local/go && \
            tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz" && \
            rm "go$ver.linux-amd64.tar.gz" && \
            echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile && \
            source $HOME/.bash_profile && \
            go version
          args:
            executable: /bin/bash
      when: go_version_check.rc != 0 or GO_VERSION not in go_version_check.stdout

    - name: Check Allorad version
      shell: allorad version
      register: allorad_version_check
      ignore_errors: yes

    - name: Install Allorad if not present or version mismatch
      block:
        - name: Clone Allora Chain repository
          git:
            repo: "{{ ALLOCHAIN_REPO }}"
            dest: "{{ ansible_env.HOME }}/allora-chain"
            version: "tags/v0.4.0"
            force: yes

        - name: Run make install for Allora Chain
          shell: |
            cd {{ ansible_env.HOME }}/allora-chain
            make install
          args:
            executable: /bin/bash
      when: allorad_version_check.rc != 0 or ALLORAD_VERSION not in allorad_version_check.stdout

    - name: Ensure wallet directory exists
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.allorad/wallets"
        state: directory
        mode: '0755'

    - name: Add new wallet and store output
      ansible.builtin.shell: |
        allorad keys add {{ wallet_name }} --keyring-backend test --output json > {{ ansible_env.HOME }}/.allorad/wallets/{{ wallet_name }}.info
      args:
        executable: /bin/bash

    - name: Display wallet info message
      ansible.builtin.debug:
        msg: "Wallet created. You can find the wallet info, including and seed phrase at {{ ansible_env.HOME }}/.allorad/wallets/{{ wallet_name }}.info"