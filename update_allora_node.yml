---
- name: Update Allora Node
  hosts: localhost
  become: true
  gather_facts: false

  vars:
    allora_version: "v0.8.0"
    allora_binary_url: "https://github.com/allora-network/allora-chain/releases/download/{{ allora_version }}/allora-chain_{{ allora_version | replace('v', '') }}_linux_amd64"
    home_dir: "/root"

  tasks:
    # Stop Allora service before update
    - name: Stop Allora service
      systemd:
        name: allora-node
        state: stopped
      register: stop_service

    # Kill remaining processes if any
    - name: Check and kill remaining allora process
      shell: |
        for pid in $(pgrep -f "allorad"); do
          echo "Force stopping allora process (PID: $pid)..."
          kill -15 $pid
          sleep 2
          if ps -p $pid > /dev/null; then
            echo "Process still running, using SIGKILL..."
            kill -9 $pid
          fi
        done
        rm -f /root/.allorad/data/application.db/LOCK
      ignore_errors: yes

    # Remove existing binary and any potential duplicates
    - name: Remove existing binaries
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/usr/local/bin/allorad"
        - "/usr/bin/allorad"
        - "/root/go/bin/allorad"

    # Ensure go bin directory exists
    - name: Ensure /root/go/bin directory exists
      file:
        path: "/root/go/bin"
        state: directory
        mode: '0755'

    # Download and install new version
    - name: Download and install allorad binary
      get_url:
        url: "{{ allora_binary_url }}"
        dest: "/root/go/bin/allorad"
        mode: '0755'
        force: yes

    # Create symlink in /usr/local/bin
    - name: Create symlink in /usr/local/bin
      file:
        src: "/root/go/bin/allorad"
        dest: "/usr/local/bin/allorad"
        state: link

    # Clear shell hash
    - name: Clear shell hash
      shell: hash -r
      args:
        executable: /bin/bash

    # Verify the installed version with full path
    - name: Check allorad version
      shell: |
        /root/go/bin/allorad version
      register: allora_version_output

    # Start Allora service
    - name: Start Allora service
      systemd:
        name: allora-node
        state: started
      register: start_service

    # Check the current status of service
    - name: Get service status
      systemd:
        name: allora-node
      register: service_status

    # Display the results of the update process
    - name: Display update results
      debug:
        msg:
          - "Allora version: {{ allora_version_output.stdout }}"
          - "Service status: {{ service_status.status.ActiveState }}"