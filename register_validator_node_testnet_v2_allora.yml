---
- name: Register Allora Validator Node
  hosts: localhost
  become: true

  vars_prompt:
    - name: wallet_name
      prompt: "Enter your wallet name"
      private: false
    - name: moniker
      prompt: "Enter your node name"
      private: false

    
  tasks:
    - name: Get validator public key
      shell: allorad --home={{ ansible_env.HOME }}/.allorad comet show-validator
      register: validator_pubkey

    - name: Create stake-validator.json
      copy:
        dest: "{{ ansible_env.HOME }}/.allorad/stake-validator.json"
        content: |
          {
              "pubkey": {{validator_pubkey.stdout}},
              "amount": "1000000uallo",
              "moniker": "{{ moniker }}",
              "commission-rate": "0.1",
              "commission-max-rate": "0.2",
              "commission-max-change-rate": "0.01",
              "min-self-delegation": "1"
          }

    - name: Stake as Validator
      shell: |
        allorad tx staking create-validator {{ ansible_env.HOME }}/.allorad/stake-validator.json \
            --chain-id=edgenet \
            --home={{ ansible_env.HOME }}/.allorad \
            --keyring-backend=test \
            --from={{ wallet_name }} \
            --yes 
      register: validator_creation

    - name: Display validator creation output
      debug:
        msg: "{{ validator_creation.stdout }}"

    - name: Get validator information
      shell: |
        VAL_PUBKEY=$(allorad --home={{ ansible_env.HOME }}/.allorad comet show-validator | jq -r .key)
        allorad --home={{ ansible_env.HOME }}/.allorad q staking validators -o=json | \
        jq '.validators[] | select(.consensus_pubkey.value=="'$VAL_PUBKEY'")'
      register: validator_info

    - name: Display validator information
      debug:
        msg: "{{ validator_info.stdout }}"
