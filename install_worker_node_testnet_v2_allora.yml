---
- name: Deploy Allora Worker Node using Ansible
  hosts: localhost
  become: true

  vars:
    WORKER_NAME: myWorker
    TOPIC_ID_1: 1
    TOPIC_ID_2: 3
    TOPIC_ID_3: 5
    APP_HOME: "/root/.allorad"
    HF_REPO_DIR: "/root/allora-huggingface-walkthrough"
    HF_REPO: "https://github.com/allora-network/allora-huggingface-walkthrough.git"
    DOCKER_COMPOSE_PATH: "/usr/local/bin/docker-compose"

  vars_prompt:
    - name: wallet_name
      prompt: "Enter your wallet name"
      private: false
    - name: mnemonic
      prompt: "Enter your wallet mnemonic"
      private: true

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: 'yes'

    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
          - git
          - wget
          - jq
          - lsb-release
          - python3
          - python3-pip
        state: present

    - name: Check if Docker is installed
      command: docker --version
      register: docker_version
      failed_when: docker_version.rc != 0
      ignore_errors: yes

    - name: Fail if Docker is not installed
      fail:
        msg: "Docker is not installed. Please install Docker and rerun the playbook."
      when: docker_version.rc != 0

    - name: Install Docker Compose
      shell: |
        mkdir -p ~/.docker/cli-plugins/
        curl -SL https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-linux-x86_64 -o {{ DOCKER_COMPOSE_PATH }}
        chmod +x {{ DOCKER_COMPOSE_PATH }}

    - name: Check Docker Compose installation
      command: docker-compose --version
      register: docker_compose_check
      failed_when: docker_compose_check.rc != 0

    - name: Remove existing repository
      file:
        path: "{{ HF_REPO_DIR }}"
        state: absent

    - name: Clone Hugging Face repository
      git:
        repo: "{{ HF_REPO }}"
        dest: "{{ HF_REPO_DIR }}"

    - name: Copy template files
      copy:
        src: "templates/allora-huggingface-walkthrough/{{ item }}"
        dest: "{{ HF_REPO_DIR }}/{{ item }}"
      with_items:
        - config.json.j2
        - app_chronos.py.j2
        - Dockerfile.j2
        - requirements.txt.j2
        - docker-compose.yaml.j2

    - name: Generate config.json file
      template:
        src: templates/config.json.j2
        dest: "{{ HF_REPO_DIR }}/config.json"
      vars:
        wallet_name: "{{ wallet_name }}"
        mnemonic: "{{ mnemonic }}"

    - name: Make init.config executable and run it
      shell: |
        chmod +x init.config
        ./init.config
      args:
        chdir: "{{ HF_REPO_DIR }}"

    - name: Create systemd service file for Hugging Face Worker
      template:
        src: templates/allora-worker.service.j2
        dest: /etc/systemd/system/allora-worker.service
      vars:
        hf_repo_dir: "{{ HF_REPO_DIR }}"

    - name: Reload systemd daemon
      systemd:
        daemon_reload: true

    - name: Enable and start Allora Hugging Face Worker service
      systemd:
        name: allora-worker
        enabled: true
        state: restarted